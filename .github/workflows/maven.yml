name: Build and Test - Swasth Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -ppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be healthy..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -u root -ppassword --silent; then
              echo "MySQL is up!"
              break
            fi
            sleep 2
          done

      - name: Set environment variables
        run: echo "All env variables injected"
        env:
          SERVER_PORT: 8080
          DATABASE_URL: jdbc:mysql://localhost:3306/test_db
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          TOKEN_EXPIRATION_TIME: 900000
          REFRESH_TOKEN_EXPIRATION_TIME: 604800000

          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: http://localhost:8080/oauth2/callback/google

          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
          GITHUB_REDIRECT_URI: http://localhost:8080/oauth2/callback/github

          FRONTEND_URL: http://localhost:3000

      - name: Build with Maven
        run: mvn clean install -DskipTests
        env:
          SERVER_PORT: 8080
          DATABASE_URL: jdbc:mysql://localhost:3306/test_db
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          TOKEN_EXPIRATION_TIME: 900000
          REFRESH_TOKEN_EXPIRATION_TIME: 604800000

          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: http://localhost:8080/oauth2/callback/google

          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
          GITHUB_REDIRECT_URI: http://localhost:8080/oauth2/callback/github

          FRONTEND_URL: http://localhost:3000

      - name: Run tests with Maven
        run: mvn test
        env:
          SERVER_PORT: 8080
          DATABASE_URL: jdbc:mysql://localhost:3306/test_db
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          TOKEN_EXPIRATION_TIME: 900000
          REFRESH_TOKEN_EXPIRATION_TIME: 604800000

          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: http://localhost:8080/oauth2/callback/google

          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
          GITHUB_REDIRECT_URI: http://localhost:8080/oauth2/callback/github

          FRONTEND_URL: http://localhost:3000
