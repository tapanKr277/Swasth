# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Test - Swasth Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


    steps:
      - uses: actions/checkout@v4 # Checks out your repository
      - name: Set up JDK 21 # Or your desired Java version
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven' # or 'gradle' if using Gradle

      - name: Wait for MySQL to be ready
        run: |
          while ! nc -z localhost 3306; do
            sleep 1
          done

      - name: Build with Maven # Or Gradle
        run: mvn clean install -DskipTests
        env:
          SERVER_PORT: 8080
          DATABASE_URL: jdbc:mysql://localhost:3306/test_db
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          TOKEN_EXPIRATION_TIME: 900000
          REFRESH_TOKEN_EXPIRATION_TIME: 604800000

          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: http://localhost:8080/oauth2/callback/google

          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
          GITHUB_REDIRECT_URI: http://localhost:8080/oauth2/callback/github

          FRONTEND_URL: http://localhost:3000

      - name: Run tests with Maven # Or Gradle
        run: mvn test
