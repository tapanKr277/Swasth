name: Build and Test - Swasth Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-and-docker:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: swasth
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be healthy..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -u root -ppassword --silent; then
              echo "âœ… MySQL is up!"
              break
            fi
            sleep 2
          done
          
            - name: Generate .env file
        run: |
          echo "SERVER_PORT=8080" >> .env
          echo "DATABASE_URL=jdbc:mysql://localhost:3306/test_db" >> .env
          echo "DATABASE_USERNAME=root" >> .env
          echo "DATABASE_PASSWORD=password" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "TOKEN_EXPIRATION_TIME=600000" >> .env
          echo "REFRESH_TOKEN_EXPIRATION_TIME=1200000" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_REDIRECT_URI=http://localhost:8080/oauth2/callback/google" >> .env
          echo "GITHUB_CLIENT_ID=${{ secrets.GITHUB_CLIENT_ID }}" >> .env
          echo "GITHUB_CLIENT_SECRET=${{ secrets.GITHUB_CLIENT_SECRET }}" >> .env
          echo "GITHUB_REDIRECT_URI=http://localhost:8080/oauth2/callback/github" >> .env
          echo "FRONTEND_URL=http://localhost:3000" >> .env

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Generate .env file
        run: |
          cat <<EOF > .env
          SERVER_PORT=8080
          DATABASE_URL=jdbc:mysql://localhost:3306/test_db
          DATABASE_USERNAME=root
          DATABASE_PASSWORD=password
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          TOKEN_EXPIRATION_TIME=600000
          REFRESH_TOKEN_EXPIRATION_TIME=1200000
          MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI=http://localhost:8080/oauth2/callback/google
          GITHUB_CLIENT_ID=${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET=${{ secrets.GITHUB_CLIENT_SECRET }}
          GITHUB_REDIRECT_URI=http://localhost:8080/oauth2/callback/github
          FRONTEND_URL=http://localhost:3000
          EOF

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and Push Docker Image using Compose
#        run: |
#          docker compose --env-file .env -f docker-compose.yml build
#          docker compose --env-file .env -f docker-compose.yml push
